"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ItemModifierInstance = void 0;
const env_1 = require("../env");
const Resource_1 = require("./Resource");
class ItemModifierInstance extends Resource_1.ResourceInstance {
    constructor(datapack, name, modifier, options) {
        var _a;
        super(datapack, name);
        this.modifierJSON = modifier;
        this.commandsRoot.Datapack.addResource(name, 'item_modifiers', { modifier }, (_a = options === null || options === void 0 ? void 0 : options.onConflict) !== null && _a !== void 0 ? _a : env_1.CONFLICT_STRATEGIES.PREDICATE);
    }
    get modify() {
        return {
            /**
             * @param pos The position of the container containing the slot to apply the modifier to.
             * @param slot The slot to apply the modifier to.
             */
            block: (pos, slot) => {
                this.commandsRoot.item.modify.block(pos, slot, this);
            },
            /**
             * @param targets The entity/entities containing the slot to apply the modifier to.
             * @param slot The slot to apply the modifier to.
             * @param modifier The name of the modifier.
             */
            entity: (targets, slot) => {
                this.commandsRoot.item.modify.entity(targets, slot, this);
            },
        };
    }
}
exports.ItemModifierInstance = ItemModifierInstance;
