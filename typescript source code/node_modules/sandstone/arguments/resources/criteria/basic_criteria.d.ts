import type { LiteralUnion } from "../../../generalTypes";
import type { BLOCKS, DIMENSION_TYPES, ENCHANTMENTS, MOB_EFFECTS } from "../..";
import type { NumberProvider } from './utils';
export declare type BlockIdCriterion = LiteralUnion<BLOCKS>;
export declare type SlotCriterion = Partial<{
    /** The amount of slots empty in the inventory. */
    empty: NumberProvider;
    /** The amount of slots completely filled (stacksize) in the inventory. */
    full: NumberProvider;
    /** The amount of slots occupied in the inventory. */
    occupied: NumberProvider;
}>;
export declare type PositionCriterion = Partial<{
    /** The X-axis position. */
    x: NumberProvider;
    /** The Y-axis position. */
    y: NumberProvider;
    /** The Z-axis position. */
    z: NumberProvider;
}>;
export declare type DistanceCriterion = Partial<{
    absolute: NumberProvider;
    horizontal: NumberProvider;
}> & PositionCriterion;
export declare type EnchantmentCriterion = {
    /** An enchantment ID. */
    enchantment: LiteralUnion<ENCHANTMENTS>;
    /** The level of the enchantment. */
    levels: NumberProvider;
};
export declare type PotionIdCriterion = string;
export declare type DimensionCriterion = LiteralUnion<DIMENSION_TYPES>;
export declare type EffectCriterion = Partial<Record<LiteralUnion<MOB_EFFECTS>, {
    /** The effect amplifier. */
    amplifier?: NumberProvider;
    /** The effect duration in ticks. */
    duration?: NumberProvider;
}>>;
